//{{NodeBuilder Code Wizard Start <CodeWizard Timestamp>
// Run on Thu Sep 26 09:31:21 2013, version 4.01.07
//
//}}NodeBuilder Code Wizard End
//{{NodeBuilder Code Wizard Start <CodeWizard Template>
//// <Template Revision="3"/>
//}}NodeBuilder Code Wizard End

#ifndef _NODE_H
#define _NODE_H

//////////////////////////////////////////////////////////////////
// File: NodeObject.h
//
//
// Generated by NodeBuilder Code Wizard Version 4.01.07
// Copyright (c) 2001-2009 Echelon Corporation.  All rights reserved.
//                                                                                  
// ECHELON MAKES NO REPRESENTATION, WARRANTY, OR CONDITION OF
// ANY KIND, EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE OR IN
// ANY COMMUNICATION WITH YOU, INCLUDING, BUT NOT LIMITED TO,
// ANY IMPLIED WARRANTIES OF MERCHANTABILITY, SATISFACTORY
// QUALITY, FITNESS FOR ANY PARTICULAR PURPOSE, 
// NONINFRINGEMENT, AND THEIR EQUIVALENTS.
//
//
// Written By: NodeBuilder Code Wizard
//
// Description: Node Object functions header file
// This file contains type and macro definitions as well as variable
// and prototype declarations that are associated with the node object
// within this device.
// This file also contains the prototype for the node object's director
// function, which itself is defined in NodeObject.nc (please see there
// for details).
//
//////////////////////////////////////////////////////////////////

#include "common.h"

//{{NodeBuilder Code Wizard Start
// The NodeBuilder Code Wizard will add and remove code here.
// DO NOT EDIT the NodeBuilder Code Wizard generated code in these blocks
// between {{NodeBuilder Code Wizard Start and }}NodeBuilder Code Wizard End
//<Include Enum Type Headers>
#include <snvt_rq.h>
//
//<Fblock CP Family Declarations>
//
//<Fblock Input NV Declarations>
network input SNVT_obj_request nviRequest;
//
//<Fblock Output NV Declarations>
network output sync SNVT_obj_status nvoStatus;
//
//<Forward FBDirector>
extern void NodeObjectDirector(unsigned uFblockIndex, int nCommand);
//
//<Fblock Declaration>
fblock SFPTnodeObject {
   nviRequest    implements nviRequest;
   nvoStatus    implements nvoStatus;
   director    NodeObjectDirector;
} NodeObject
#ifdef USE_EXTERNAL_NAME
   external_name("NodeObject")
#endif
;
//
//<NodeObjIndex Variable>
#define NODEOBJ_INDEX      (NodeObject::global_index)
//
//<NodeObjRequest Variable>
#define NBCW_NODE_REQUEST  nviRequest
//
//<NodeObjStatus Variable>
#define NBCW_NODE_STATUS   nvoStatus
//
//}}NodeBuilder Code Wizard End

extern const SNVT_obj_status NodeObjectReportMask;
//

#endif // _NODE_H
